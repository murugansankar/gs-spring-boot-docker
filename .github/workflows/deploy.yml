# Secrets required to be in place:
# - AZURE_CREDENTIALS -

name: Build and Deploy Application

env:
  DEPLOYMENT_NAME: "springboot-demo"
  DEPLOYMENT_REGION: "eastus"
  ACR_NAME: "murugan001"
  CLUSTER_NAME: "demo-aks-cluster"
  CLUSTER_RG: "demo"

on:
  # Triggers the workflow on push events on the main branch
  # push:
  #   branches: [ main ]
  #   paths-ignore:
  #     - '*.md'

  # We also want to be able to run this manually from Github
  workflow_dispatch:

jobs:
  build_and_push_java_image: # Build the Java Application image and push to ACR
     runs-on: ubuntu-latest
     steps:
     - name: Login to Azure 
       uses: azure/login@v1
       with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: 'AzureCloud'
        enable-AzPSSession: false

     - name: checkout code
       uses: actions/checkout@v3

     - name: Set up JDK 17
       uses: actions/setup-java@v3
       with:
          java-version: '17'
          distribution: 'adopt'

     # Build Java Application    
     - name: Build with Maven, compile and build the Docker image
       run: |
        mvn spring-boot:build-image -Dmodule.image.name=spring-demo -Dmodule.image.repo=${{ env.ACR_NAME }}.azurecr.io
       working-directory: complete

     # Azure Powershell Cli - ACR Login, Tag Image, Push Image
     - name: Azure Powershell Cli - ACR Login, Tag Image, Push Image
       uses: azure/powershell@v1
       with:
        inlineScript: |
         #!/bin/bash
         az acr login --name ${{ env.ACR_NAME }}
         docker push ${{ env.ACR_NAME }}.azurecr.io/spring-demo:latest
        azPSVersion: "latest"

  # update_kubernetes: 
  #     runs-on: ubuntu-latest
  #     # needs: build_and_push_java_image
  #     steps:
  #     - name: checkout code
  #       uses: actions/checkout@v3

  #     - name: Login to Azure 
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #         environment: 'AzureCloud'
  #         enable-AzPSSession: false

  #         # https://github.com/Azure/aks-set-context
  #     - name: Set the target AKS cluster.
  #       uses: Azure/aks-set-context@v1
  #       with:
  #         creds: '${{ secrets.AZURE_CREDENTIALS }}'
  #         cluster-name: ${{ env.CLUSTER_NAME }}
  #         resource-group: ${{ env.CLUSTER_RG }}

  #     - uses: Azure/k8s-deploy@v4
  #       with:
  #         namespace: 'default'
  #         manifests: |
  #             manifests
  #         # images: ${{ env.ACR_NAME }}.azurecr.io/spring-demo:latest
